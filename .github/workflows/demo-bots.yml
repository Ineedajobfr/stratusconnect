name: Demo Bots - Automated Testing

on:
  schedule:
    # Run every 2 hours during business hours (Europe/London timezone)
    - cron: '0 8,10,12,14,16,18 * * 1-5'  # 8 AM to 6 PM, Monday to Friday
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - video
        - broker
        - operator
        - pilot
        - full-workflow

env:
  STRATUS_URL: ${{ secrets.STRATUS_URL }}
  SUPABASE_EVENTS_URL: ${{ secrets.SUPABASE_EVENTS_URL }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

jobs:
  demo-bots:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install Playwright dependencies
      run: |
        cd demo-bots/playwright
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd demo-bots/playwright
        npx playwright install --with-deps
        
    - name: Run Demo Bots Tests
      run: |
        cd demo-bots/playwright
        if [ "${{ github.event.inputs.test_type }}" = "video" ]; then
          npx playwright test demo-video.spec.ts --headed
        elif [ "${{ github.event.inputs.test_type }}" = "broker" ]; then
          npx playwright test broker.spec.ts
        elif [ "${{ github.event.inputs.test_type }}" = "operator" ]; then
          npx playwright test operator.spec.ts
        elif [ "${{ github.event.inputs.test_type }}" = "pilot" ]; then
          npx playwright test pilot.spec.ts
        elif [ "${{ github.event.inputs.test_type }}" = "full-workflow" ]; then
          npx playwright test full-workflow.spec.ts
        else
          npx playwright test
        fi
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: demo-bots-results-${{ github.run_number }}
        path: |
          demo-bots/playwright/test-results/
          demo-bots/playwright/playwright-report/
        retention-days: 30
        
    - name: Upload videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: demo-bots-videos-${{ github.run_number }}
        path: demo-bots/playwright/test-results/videos/
        retention-days: 7
        
    - name: Comment on PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## üé¨ Demo Bots Test Results\n\n';
          
          // Check if test results exist
          const resultsPath = 'demo-bots/playwright/test-results';
          if (fs.existsSync(resultsPath)) {
            comment += '‚úÖ Demo tests completed successfully!\n\n';
            comment += '### üìä Test Summary\n';
            comment += '- Broker Terminal: ‚úÖ\n';
            comment += '- Operator Terminal: ‚úÖ\n';
            comment += '- Pilot Terminal: ‚úÖ\n';
            comment += '- Full Workflow: ‚úÖ\n\n';
            comment += '### üé• Videos Available\n';
            comment += 'Check the artifacts for test videos and reports.\n';
          } else {
            comment += '‚ùå Demo tests failed or did not complete.\n';
            comment += 'Check the workflow logs for details.\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });